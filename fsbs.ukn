
--S13	Trade patables -Sundry creditors
		Goods
		Millgin 
		Other
		Brokers

		UPDATE ACCOUNTS SET FS_L_SCH='TRDPAYABLE' WHERE LEDGER=14;  --PAYABLE TO PARTY FOR AGAINST GOODS PURCHASSES YARN /CLOTH
		UPDATE ACCOUNTS SET FS_L_SUB='GOODS' WHERE SUBLDGRID='01402'; --CLOTH
		UPDATE ACCOUNTS SET FS_L_SUB='GOODS' WHERE SUBLDGRID='01403'; --YARN
		UPDATE ACCOUNTS SET FS_L_SUB='MILLGIN' WHERE SUBLDGRID='01401'; --MILLGIN & CHEMICAL
		UPDATE ACCOUNTS SET FS_L_SUB='OTHERS' WHERE SUBLDGRID='01404'; --OTHER PAYABLES
		UPDATE ACCOUNTS SET FS_L_SUB='OTHERS' WHERE SUBLDGRID='01404'; --OTHER PAYABLES
		CREATE VIEW V_FSBSP_S13 AS SELECT FS_L_SCH,FS_L_SUB,COMPANYCODE,ACCOUNTID,ACCNAME FROM ACCOUNTS WHERE FS_L_SCH='TRDPAYABLE'  ORDER BY 1,2;
		SELECT B.FS_L_SUB,A.ACCNAME,B.BALANCE FROM 
						(SELECT FS_L_SUB, ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
						FROM V_FSBSP_S13 VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
						WHERE 1=1 AND  b.balance >0 ORDER BY 1,2;



--S12	customer deposits
			UPDATE ACCOUNTS SET FS_L_SCH = 'CUSTDEP' WHERE ACCOUNTID ='B10167912';
			CREATE VIEW V_FSBSP_S12 AS SELECT FS_L_SCH,FS_L_SUB,COMPANYCODE,ACCOUNTID,ACCNAME FROM ACCOUNTS WHERE FS_L_SCH='CUSTDEP'  ORDER BY 1,2;

			SELECT B.FS_L_SUB,A.ACCNAME,B.BALANCE FROM 
						(SELECT FS_L_SUB, ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
						FROM V_FSBSP_S12 VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
						WHERE 1=1 AND  b.balance >0 ORDER BY 1,2;



--S11 -UNSECURED LOAN
		--VIEW:
			CREATE OR REPLACE  VIEW V_FSBSG_S11 AS 
				SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
				FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
				WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='UNSECLOAN' ;
			
			CREATE VIEW V_FSBSP_S11 AS 
			SELECT FS_A_SCH,FS_A_SUB,COMPANYCODE,ACCOUNTID,ACCNAME FROM ACCOUNTS WHERE FS_A_SCH='UNSECLOAN'  ORDER BY 1,2;

		--QUERY
			SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
			(
			SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
			FROM (select * from V_FSBSG_S11 union all select * from  V_FSBSP_S11) VSCH WHERE VSCH.COMPANYCODE='B10' 
			) B 
			JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
			WHERE 1=1 and b.balance >0 ORDER BY 1,2;

			UPDATE GLGROUP SET FSSCH='SECLOANS' WHERE GLGID IN 
			(
			252,
			267,
			272,
			293,
			303,
			332,
			393,
			46,
			58,
			156,
			188
			)

--S10
		VIEW:
			CREATE OR REPLACE  VIEW V_FSBSG_S10 AS 
				SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
				FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
				WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='SECLOANS' ;
	      
			SELECT * FROM V_FSBSG_S10;
		QUERY:
			SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
			(SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
			FROM V_FSBSG_S10 VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
			WHERE 1=1 AND  b.balance >0 ORDER BY 1,2;

		--background
			select * from glgroup where glgname like '%LOAN%' AND FSSCH IS NULL;
			UPDATE GLGROUP SET FSSCH='SECLOANS' WHERE GLGID IN (
			229,
			309,
			331,
			335,
			367,
			388,
			43,
			98,
			139,
			198);



--SCH 9
		VIEW:
			CREATE OR REPLACE  VIEW V_FSBSG_S9 AS 
				SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
				FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
				WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='PROVISIONS' ;
	      
			SELECT * FROM V_FSBSG_S9;
		QUERY:
			SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
			(SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
			FROM V_FSBSG_S9 VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
			WHERE 1=1 AND  b.balance >0 ORDER BY 1,2;

		--background


		select * from glgroup where glgname like 'PROVIS%';
		UPDATE GLGROUP SET FSSCH='PROVISIONS' WHERE GLGID IN (
		264,
		398,
		148,
		199,
		200);
		COMMIT;


--SCH 8
		VIEW:
			CREATE OR REPLACE  VIEW V_FSBSG_S8 AS 
				SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
				FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
				WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='CAPITAL' ;
	      
			SELECT * FROM V_FSBSG_S8;
		QUERY:
			SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
			(SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
			FROM V_FSBSG_S8 VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
			WHERE 1=1  AND b.balance >0 ORDER BY 1,2;

		--background
			select * from  glgroup where GLGNAME like '%PRANAV BHARAT GANDHI CAPITAL A/C.%';
			UPDATE GLGROUP SET FSSCH='CAPITAL' WHERE GLGID IN 
			(
			219,
			227,
			304,
			312,
			380,
			1,
			2,
			7,
			17,
			37,
			68,
			207,
			208);


--SCH7 CASH EQUIVALENTS /CASH
		--BANK ACCOUNTS CASH EQUIVALENTS
		CREATE VIEW V_FSBSB_CASHEQ AS SELECT FS_A_SCH,FS_A_SUB,COMPANYCODE,ACCOUNTID,ACCNAME FROM ACCOUNTS WHERE FS_A_SCH='CASHEQUIVALENTS'  ORDER BY 1,2;
		SELECT * FROM V_FSBSB_CASHEQ;
		
		--CASH ON HAND ACCOUNTS 
		CREATE VIEW V_FSBSG_CASHEQ AS
			SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
			FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
			WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='CASHEQUIVALENTS' ;


		SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
		(
		SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
		FROM (select * from V_FSBSG_CASHEQ union all select * from  V_FSBSB_CASHEQ) VSCH WHERE VSCH.COMPANYCODE='B10' 
		) B 
		JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
		WHERE 1=1 and b.balance <0 ORDER BY 1,2;

		-----------BACKGROUND WORKS 
		UPDATE ACCOUNTS SET Fs_A_Sch='CASHEQUIVALENTS' ,FS_A_SUB='BANKCURACT' WHERE ACCOUNTID IN
		(SELECT ACCOUNTID FROM  ACCOUNTS WHERE ACCNAME LIKE '%BANK%CURRENT%');
		UPDATE ACCOUNTS SET Fs_A_Sch='CASHEQUIVALENTS' ,FS_A_SUB='BANKCURACT' WHERE ACCOUNTID IN
		(SELECT ACCOUNTID FROM  ACCOUNTS WHERE ACCNAME LIKE '%BANK%C/A%');

		UPDATE GLGROUP SET FSSCH='CASHEQUIVALENTS',FSSUB='CASHACCOUNT'  WHERE GLGID IN (154,162);



--SCH 6
	UPDATE ACCOUNTS SET FS_A_SCH='SUNDRYDR' WHERE LEDGER=13;  --NON CURRENT LOANS -ADVANCE PAID TO PARTY FOR FUTUTRE PURCHASES

		--PARTY ACCOUNTS SUNDRY DEBTORS 
		CREATE VIEW V_FSBSP_SUNDRYDR AS SELECT FS_A_SCH,FS_A_SUB,COMPANYCODE,ACCOUNTID,ACCNAME FROM ACCOUNTS WHERE FS_A_SCH='SUNDRYDR'  ORDER BY 1,2;
		SELECT * FROM V_FSBSP_SUNDRYDR;
		
		--ANY GL ADJUSTMENTS AGAINST SUNDRY DEBTORS LIKE 'LOST RECEIVABLE' ETC AS OF NOW IT IS BLANK
		CREATE VIEW V_FSBSG_SUNDRYDR AS
			SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
			FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
			WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='SUNDRYDR' ;

		SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
		(
		SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
		FROM (select * from V_FSBSG_SUNDRYDR union all select * from  V_FSBSP_SUNDRYDR) VSCH WHERE VSCH.COMPANYCODE='B10' 
		) B 
		JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
		WHERE 1=1 and b.balance <0 ORDER BY 1,2;


--SCH 5 MISSING



--SCH 4 OTHER FINANCIAL ASSETS S4OFA
	UPDATE GLGROUP SET FSSCH='OTHFA_BSS4' WHERE GLGID IN (283,382,368,28,97,117,213,371,265);
		
	CREATE VIEW V_FSBS_S4 AS 
			SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
			FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
			WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='OTHFA_BSS4' ;
		SELECT * FROM V_FSBS_S4;

	query:
		SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
		(SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
		FROM V_FSBS_S4 VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
		WHERE B.BALANCE  < 0 ORDER BY 1,2;

		select * from  glgroup where GLGNAME like '%FDR%';
		283,382,368,28,97,117,213,371,265
		UPDATE GLGROUP SET FSSCH='OTHFA_BSS4' WHERE GLGID IN (283,382,368,28,97,117,213,371,265);

--sch 3 LNYC -Loan Yes Current
	CREATE VIEW V_FSBSG_LNYC AS --FS-BS-GL-LOAN yes CURRENT
			SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
			FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
			WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='LNYC' ;


	CREATE VIEW V_FSBSP_LNYC AS SELECT FS_A_SCH,FS_A_SUB,COMPANYCODE,ACCOUNTID,ACCNAME FROM ACCOUNTS WHERE FS_A_SCH='LNYC'  ORDER BY 1,2;

	Query:
		SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
		(
		SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
		FROM (select * from V_FSBSG_LNYC union all select * from  V_FSBSp_LNYC) VSCH WHERE VSCH.COMPANYCODE='B10' 
		) B 
		JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
		WHERE 1=1 and b.balance <0 ORDER BY 1,2;


	-------------------data work in backgroud			
			SELECT * FROM V_FSBSG_LNYC
			UNION ALL 
			SELECT * FROM V_FSBSP_LNYC;

			alter accounts table to add FS_A_SCH, FS_A_SUB
			select * from glgroup;
			ALTER TABLE ACCOUNTS DROP COLUMN FSSUB ;
			ALTER TABLE ACCOUNTS ADD (FS_A_SCH VARCHAR2(15), FS_A_SUB VARCHAR2(15),FS_L_SCH VARCHAR2(15), FS_L_SUB VARCHAR2(15));

			--all suppliers
			UPDATE ACCOUNTS SET FS_A_SCH='LNYC' WHERE LEDGER=14;  --NON CURRENT LOANS -ADVANCE PAID TO PARTY FOR FUTUTRE PURCHASES
			ALTER TABLE GLGROUP DROP COLUMN FSSECONDARY;
			ALTER TABLE GLGROUP ADD  (FSSCH VARCHAR2(15), FSSUB VARCHAR2(15));
			UPDATE GLGROUP SET FSSCH='LNYC' WHERE GLGNAME LIKE '%DEPO%' AND GLGNAME NOT LIKE '%FIX%';


			--debit balance (adv paid) purchaser party (supplier) to deposit with supplier category of non current loans
			UPDATE ACCOUNTS SET FS_A_SUB='ADVSUP' WHERE FS_A_SCH='LNYC';
			--other deposits of current loans
			UPDATE  GLGROUP SET FSSCH='LNYC' ,FSSUB='OTHDEP' WHERE  GLGID=397;
			UPDATE  GLGROUP SET FSSCH='LNYC' ,FSSUB='OTHDEP' WHERE  GLGID=178;
			--deposits with government in current loans
			UPDATE GLGROUP SET FSSUB='GOVDEP' WHERE FSSCH='LNYC' AND FSSUB IS NUL;
			COMMIT;


--sch 3A LNYC -Loan Non Current
			    
	CREATE VIEW V_FSBSG_LNNC AS --FS-BS-GL-LOAN yes CURRENT
			SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
			FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
			WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='LNNC' ;


	CREATE VIEW V_FSBSP_LNNC AS SELECT FS_A_SCH,FS_A_SUB,COMPANYCODE,ACCOUNTID,ACCNAME FROM ACCOUNTS WHERE FS_A_SCH='LNNC'  ORDER BY 1,2;

	query :
		
		SELECT B.FSSUB,A.ACCNAME,B.BALANCE FROM 
		(
		SELECT FSSUB,ACCOUNTID ,Getclosingbalance(ACCOUNTID,'31-MAR-2021','13-AUG-2021') BALANCE 
		FROM (select * from V_FSBSG_LnnC union all select * from  V_FSBSp_LNnC) VSCH WHERE VSCH.COMPANYCODE='B10' 
		) B 
		JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
		WHERE 1=1 and b.balance <0 ORDER BY 1,2;




	-------------------data work in backgroud			
			SELECT * FROM V_FSBSG_LNNC
			UNION ALL 
			SELECT * FROM V_FSBSP_LNNC ORDER BY 1,2;
      
	-------------------data work in backgroud			
			UPDATE GLGROUP SET FSSCH='LNYC',FSSUB='GOVDEP' WHERE GLGID IN (
			226,
			276,
			317,
			376,
			71,
			160,
			360,
			316,
			334,
			360,
			377,
			379,
			397,
			51,
			65,
			167,
			218,
			20,
			113
			);

--SCH 2 
		UPDATE GLGROUP SET FSSCH='PRELEXP' WHERE GLGID=274;


		CREATE VIEW V_FSBSG_PRELEXP AS
			SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
			FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
			WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='PRELEXP' ;

		QUERY:
		SELECT B.FSSUB,A.ACCNAME,
			Getclosingbalance(B.ACCOUNTID,'31-MAR-2020','13-AUG-2021') OPENINGBALANCE,
			(SELECT SUM(AMOUNT) FROM LEDGERTXN WHERE ACCOUNTID =B.ACCOUNTID AND TNXDATE BETWEEN FYS('31-MAR-2021') AND FYE('31-MAR-2021') ) WRITTENOFF,
			Getclosingbalance(B.ACCOUNTID,'31-MAR-2021','13-AUG-2021') CLOSINGBALANCE 
			FROM 
			(SELECT FSSUB,ACCOUNTID 
			FROM V_FSBSG_PRELEXP VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
			WHERE 1=1 ;


?SCH1	PROPERTY PLANT & EQUIPMENTS  (TB -opening , FY -Debit , FY credits, FY Depreciation)

		
		CREATE VIEW V_FSBSG_FIXASSETS AS
			SELECT GLg.FSSCH,GLG.FSSUB,A.COMPANYCODE,A.ACCOUNTID,ACCNAME 
			FROM ACCOUNTS A JOIN GLGROUP GLG ON TO_NUMBER(SUBSTR(ACCOUNTID,7))= Glg.Glgid
			WHERE SUBSTR(ACCOUNTID,4,3) ='GLA' AND GLG.FSSCH='FIXASSETS' ;

		SELECT B.FSSUB,A.ACCNAME,
			Getclosingbalance(B.ACCOUNTID,'31-MAR-2020','13-AUG-2021') OPENINGBALANCE,
			(SELECT SUM(AMOUNT) FROM LEDGERTXN WHERE ACCOUNTID =B.ACCOUNTID AND TNXNATURE='D' AND TNXDATE BETWEEN FYS('31-MAR-2021') AND FYE('31-MAR-2021') ) PURCHASE,
			(SELECT SUM(AMOUNT) FROM LEDGERTXN WHERE ACCOUNTID =B.ACCOUNTID AND TNXNATURE='C' AND TNXDATE BETWEEN FYS('31-MAR-2021') AND FYE('31-MAR-2021') ) SALES,
			Getclosingbalance(B.ACCOUNTID,'31-MAR-2021','13-AUG-2021') CLOSINGBALANCE 
			FROM 
			(SELECT FSSUB,ACCOUNTID 
			FROM V_FSBSG_FIXASSETS VSCH WHERE VSCH.COMPANYCODE='B10' ) B JOIN ACCOUNTS A ON B.ACCOUNTID=A.ACCOUNTID 
			WHERE 1=1 ;

8888888888888888888
		IDENTIFY ACCOUNTS
		OPENING BALANCE
		EACH ACCOUNT'S PURCHASE TOTAL
		EACH ACCOUNT'S SALES TOTAL
		EACH ACCOUNT'S CLOSING

		DEPRECIATION OPENING
		FA OPENING TOTAL - DEP OPENING TOTAL
		
		FA CLOSING TOTAL - DEP CLOSING TOTAL


UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='PLANTMACH' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%FIRE%' AND FSSCH IS NULL);
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='LANDBLDG' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%LAXMINARAYAN%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='PLANTMACH' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%SOLAR%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='PLANTMACH' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%GENERATOR%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='PLANTMACH' WHERE GLGID IN (33,34);
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='PLANTMACH' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%LIFT%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='PLANTMACH' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%FIRE%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='PLANTMACH' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%GRINDER%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='FURNITURE' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%FURNITURE%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='FURNITURE' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%FITTING%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='FURNITURE' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%METER%' AND FSSCH IS NULL); 

UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='EQUIPMENTS' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%MOBILE%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='EQUIPMENTS' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%WATER%' AND FSSCH IS NULL); 


UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='COMPUTERS' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%SOFTWARE%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='COMPUTERS' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%XEROX%' AND FSSCH IS NULL); 
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='VEHICLES' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%BENZ%' AND FSSCH IS NULL);

UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='VEHICLES' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%YOTA%' AND FSSCH IS NULL);
UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='VEHICLES' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%ONDA%' AND FSSCH IS NULL);

UPDATE GLGROUP SET FSSCH ='FIXASSETS' , FSSUB='DEPRTOTAL' WHERE GLGID IN
(SELECT GLGID FROM GLGROUP WHERE GLGNAME LIKE '%DEPRE%' AND FSSCH IS NULL);

SELECT * FROM GLGROUP WHERE GLGNAME LIKE '%DEPRE%' AND FSSCH IS NULL;
COMMIT;

		2 groups 
			GROSS BLOCK 
			CAPITAL WORK IN PROGRESS

			A- GROSS BLOSCK HAS :
				FY OPENING , TOTAL CREDITS ,TOTAL DEBITS FROM LEDGERTXN
				DEPRECIATION DATA TO BE INSERTED IN A NEW TABLE
				--new table structure for data capture of depreciation 
				FAACCOUNT	FYID		TXNDATE	 NATURE 	TXNAMOUNT	(FIRST PURCHASE ENTRY CAN ALSO BE INSERTED HERE WITH CREDIT NATURE NATURE )
				NATURE=D=DEPRECIATION, C=CAPITAL PURCHASE
				
				SUM UP THE D -VALUES FOR THE FY AND CONSIDER IN THE REPORT

				A-GROSS BLOCK 
					LAND & BUILDING
					PLANT & MACHINERY
					FURNITURE FIXTURE
					OFFICE EQUIPMENTS
					COMPUTERS
					VEHICLES
				B-CAPITAL WORK IN PROGRESS
					ACCOUNTS CAN BE GROUPED IN THIS CATEGORY ,SO THAT THEY WILL APPEAR HEARE AUTOMATICALLY	
										

				?Why need Opening balance of Depreciation? As the opening balance is already a depreciated value
				?will they maintain each & every  accounts depreciation as a transaction or a lumsum  amount

			B-CAPITAL WORK IN PROGRESS
				?Capital work in progress can have sub groups ? No such account exists now?
				?Is this also to be generated in same format as A BLOCK (opening,debit,credit,depr)


?SCH5	
		For each Inventory 
				Opening		+ Purchase		- Consumption			-Sales		=Closing
				
				Yarn Opening manual
				Yarn Purchases  instock only avbl
				Consumption manual

			
				Cloth purchase system
				Cloth sale avbl
				Cloth consumption will be 0
				Cloth Closing stock will be wrong as stock removal manually done


				Millgin Opening manual
				Millgin Purchase system


				ALTER TABLE FSINVLKP ADD  (INVCAT VARCHAR2(15));

				UPDATE FSINVLKP SET INVCAT='YINS' WHERE INVID LIKE '%YNINS';
				UPDATE FSINVLKP SET INVCAT='YINP' WHERE INVID LIKE '%YNINP';
				UPDATE FSINVLKP SET INVCAT='YINT' WHERE INVID LIKE '%YNINT';
				UPDATE FSINVLKP SET INVCAT='FINS' WHERE INVID LIKE '%FINS';
				UPDATE FSINVLKP SET INVCAT='FINP' WHERE INVID LIKE '%FINP';
				UPDATE FSINVLKP SET INVCAT='FINT' WHERE INVID LIKE '%FINT';
				UPDATE FSINVLKP SET INVCAT='MINS' WHERE INVID LIKE '%MINS';
				UPDATE FSINVLKP SET INVCAT='MINP' WHERE INVID LIKE '%MINP';
				UPDATE FSINVLKP SET INVCAT='CINT' WHERE INVID LIKE '%MINT';
				UPDATE FSINVLKP SET INVCAT='MINT' WHERE INVID LIKE '%NINT';

				SELECT * FROM BST.Fsinvtyplkp;
				WITH Y AS
				(
				SELECT X.INVID,
				DECODE(TNXTP,'OPENING', QNTY,0) OPENING_QNTY, DECODE(TNXTP,'CLOSING', AMOUNT,0) OPENING_AMT,
				DECODE(TNXTP,'PURCHASE', QNTY,0) PURCHASE_QNTY, DECODE(TNXTP,'PURCHASE', AMOUNT,0) PURCHASE_AMT,
				DECODE(TNXTP,'SALE', QNTY,0) SALE_QNTY, DECODE(TNXTP,'SALE', AMOUNT,0) SALE_AMT,
				DECODE(TNXTP,'CONSUMPTION', QNTY,0) CONSUMPTION_QNTY, DECODE(TNXTP,'CONSUMPTION', AMOUNT,0) CONSUMPTION_AMT,
				DECODE(TNXTP,'CLOSING', QNTY,0) CLOSING_QNTY, DECODE(TNXTP,'CLOSING', AMOUNT,0) CLOSING_AMT
				FROM 
				(SELECT INVID,TNXTP,SUM(QNTY) QNTY, SUM(AMOUNT)AMOUNT FROM  FSINVTXN WHERE  TNXDT BETWEEN FYS('31-MAR-2021') AND FYE('31-MAR-2021')
				GROUP BY INVID,TNXTP
				)X
				) SELECT 
				L.INVCAT,L.INVID,L.INVNM,Y.* FROM Y JOIN FSINVLKP L ON L.INVID=Y.INVID;

BSSIDE           CHAR(1)       --hardcode
BSNATURE         CHAR(2)       --hardcode
BSSCH            CHAR(2)       --hardcode
FSSCH            VARCHAR2(20)  --null
FSSUB            VARCHAR2(20)  --invid
DESCRIPTION      VARCHAR2(100) --invnm
BALANCE          NUMBER(15,2)  --closing value
BADDLESS         CHAR(1)       --hardcode

--EXTRACT GTT QUERY 
      SELECT * FROM 
      (
      	WITH Y AS
				(
				SELECT X.INVID,
				DECODE(TNXTP,'OPENING', QNTY,0) OPENING_QNTY, DECODE(TNXTP,'CLOSING', AMOUNT,0) OPENING_AMT,
				DECODE(TNXTP,'PURCHASE', QNTY,0) PURCHASE_QNTY, DECODE(TNXTP,'PURCHASE', AMOUNT,0) PURCHASE_AMT,
				DECODE(TNXTP,'SALE', QNTY,0) SALE_QNTY, DECODE(TNXTP,'SALE', AMOUNT,0) SALE_AMT,
				DECODE(TNXTP,'CONSUMPTION', QNTY,0) CONSUMPTION_QNTY, DECODE(TNXTP,'CONSUMPTION', AMOUNT,0) CONSUMPTION_AMT,
				DECODE(TNXTP,'CLOSING', QNTY,0) CLOSING_QNTY, DECODE(TNXTP,'CLOSING', AMOUNT,0) CLOSING_AMT
				FROM 
				(SELECT INVID,TNXTP,SUM(QNTY) QNTY, SUM(AMOUNT)AMOUNT FROM  FSINVTXN WHERE  TNXDT BETWEEN FYS('31-MAR-2021') AND FYE('31-MAR-2021')
				GROUP BY INVID,TNXTP
				)X
				) SELECT 
				--L.INVCAT,L.INVID,L.INVNM,Y.* FROM Y JOIN FSINVLKP L ON L.INVID=Y.INVID;
        'A' BSSIDE ,'YC' BSNATURE,'05' BSSCH ,NULL FSSCH,Y.INVID FSSUB,L.INVNM DESCRIPTION,Y.CLOSING_AMT BALANCE ,'A' BADDLESS FROM Y JOIN FSINVLKP L ON L.INVID=Y.INVID
        );






DECLARE
  PASONDATE DATE;
  PIDDATE DATE;
  PCOMPANY VARCHAR2(200);
  PMKRUSR CHAR(200);
  PMKRDATE DATE;
  PMKRTIME TIMESTAMP;
  PMKRBRH NUMBER;
  PMKRNODE VARCHAR2(200);
  PCHKUSR CHAR(200);
  PCHKDATE DATE;
  PCHKTIME TIMESTAMP;
  PCHKBRH NUMBER;
  PCHKNODE VARCHAR2(200);
  PRESOURCENAME VARCHAR2(200);
  PERRMSG VARCHAR2(200);
  v_Return NUMBER;
BEGIN
  PASONDATE := '31-MAR-2021';
  PIDDATE := '18-AUG-2021';
  PCOMPANY := 'B10';
  PMKRUSR := NULL;
  PMKRDATE := NULL;
  PMKRTIME := NULL;
  PMKRBRH := NULL;
  PMKRNODE := NULL;
  PCHKUSR := NULL;
  PCHKDATE := NULL;
  PCHKTIME := NULL;
  PCHKBRH := NULL;
  PCHKNODE := NULL;
  PRESOURCENAME := NULL;

  v_Return := FSBS_GEN(
    PASONDATE => PASONDATE,
    PIDDATE => PIDDATE,
    PCOMPANY => PCOMPANY,
    PMKRUSR => PMKRUSR,
    PMKRDATE => PMKRDATE,
    PMKRTIME => PMKRTIME,
    PMKRBRH => PMKRBRH,
    PMKRNODE => PMKRNODE,
    PCHKUSR => PCHKUSR,
    PCHKDATE => PCHKDATE,
    PCHKTIME => PCHKTIME,
    PCHKBRH => PCHKBRH,
    PCHKNODE => PCHKNODE,
    PRESOURCENAME => PRESOURCENAME,
    PERRMSG => PERRMSG
  );
END;

TO SEE THE DYNAMIC SQL EXECUTED :
   SELECT * FROM DYNAMICSQLOG;

				
				-------------------------------------------------------------------------------------------------------------------	-------------------------------------------------------------------------------------------------------------------
				-----------------------------------------------------------------------------------------------------  B A C K G R O U N D W O R K S  ----------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------------------	-------------------------------------------------------------------------------------------------------------------

Inventories
				1.Yarn AS instock, Inprocess, In transit	ASYNINS,ASYNINP,ASYNINT
				2.Yarn PS instock, Inprocess, In transit	PSYNINS,PSYNINP,PSYNINT
				3.Grey AS instock, In transit			PSGFINS,PSGFINT	
				4.Grey PS instock, In transit			ASGFINS,ASGFINT
				5.Fnsh	 As instock, In transit		ASFFINS,ASFFINT
				6.Fnsh PS instock, In transit			PSFFINS,PSFFINT
				7.Chemical instck					CHEMINS
				8.Millgin	instock					MLGNINS
					
						Input figures :
							Opening		Qnty, Value
							Purchase		Qnty, Value
							Sale			Qnty, Value	
							Consumption	Qnty, Value

				New data structure required as follows:
					
				FYID	 Inventory	 Stock date	nature	Txntype			Quantity		Value
				-------------------------------------------------------------------------------------------------------------------
				2020 ASYNINS	 31-03-2021	C		OPENING			1000		1,23,45,678.90
				2020 ASYNINS	 30-JUN-2021	D		CONSUMPTION		200			        23,450.00
	
				AT THE END OF THE YEAR, A STOCK CARRY FORWARD PROCESS WILL CREATE OPENING TRANSACTION AS SIMILAR AS ABOVE
				DURING CURRENT YEAR REPORTING CONSIDER ONLY THE CURRENT YEARS TRANSACTIONS ACCOUNT WISE AND TOTALLED ACCORDINGLY

				FSINVTXN      
					FYID
					INVID	--FSINVLKP REF
					TXNDT
					TXNTP	--FSINVTYPLKP
					QNTY	
					VALUE
					MKR
					CHK

				CREATE TABLE FSINVTXN (FYID VARCHAR2(4),INVID VARCHAR2(10), TNXDT DATE , TNXTP VARCHAR2(25),QNTY  NUMBER(15,3), VALUE NUMBER(15,2));

				FSINVLKP
					INVID
					INVNM
					INVUNIT		REF UNIT.UNITID
					ISACTIVE

				CREATE TABLE FSINVLKP(INVID VARCHAR2(10), INVNM VARCHAR2(50), INVUNIT NUMBER(15) ,ISACTIVE VARCHAR2(1));
				INSERT INTO FSINVLKP VALUES ('ASYNINS','ART SILK YARN IN STOCK', 41,'Y');
				INSERT INTO FSINVLKP VALUES ('ASYNINP','ART SILK YARN IN PRODUCTION', 41,'Y');
				INSERT INTO FSINVLKP VALUES ('ASYNINT','ART SILK YARN IN TRANSIT', 41,'Y');

				INSERT INTO FSINVLKP VALUES ('PSYNINS','PURE SILK YARN IN STOCK', 41,'Y');
				INSERT INTO FSINVLKP VALUES ('PSYNINP','PURE SILK YARN IN PRODUCTION', 41,'Y');
				INSERT INTO FSINVLKP VALUES ('PSYNINT','PURE SILK YARN IN TRANSIT', 41,'Y');

				INSERT INTO FSINVLKP VALUES ('PSGFINS','PURE SILK GREY IN STOCK', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('PSGFINT','PURE SILK GREY IN PRODUCTION', 43,'Y');

				INSERT INTO FSINVLKP VALUES ('ASGFINS','ART SILK GREY IN STOCK', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('ASGFINT','ART SILK GREY IN TRANSIT', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('PSGFINS','PURE SILK GREY IN STOCK', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('PSGFINT','PURE SILK GREY IN TRANSIT', 43,'Y');

				INSERT INTO FSINVLKP VALUES ('ASFFINS','ART SILK FINISHED IN STOCK', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('ASFFINT','ART SILK FINISHED IN TRANSIT', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('PSFFINS','PURE SILK FINISHED IN STOCK', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('PSFFINT','PURE SILK FINISHED IN TRANSIT', 43,'Y');

				INSERT INTO FSINVLKP VALUES ('CHEMINS','CHEMICALS  IN STOCK', 43,'Y');
				INSERT INTO FSINVLKP VALUES ('MLGNINS','MILLGIN IN STOCK', 43,'Y');
                  
				FSINVTYPLKP
					TYPID			CLOSING,OPENING,PRODUCTION,PURCHASE,SALE,ISSUE 
					TYPNATURE		C/D
					TYPDESC			
					
				create table FSINVTYPLKP	
				(TYPID VARCHAR2(25), TYPNATURE VARCHAR2(1) , TYPDESC VARCHAR2(50));
				INSERT INTO FSINVTYPLKP VALUES ('CLOSING','C', 'CLOSING STOCK');
				INSERT INTO FSINVTYPLKP VALUES ('OPENING','C', 'OPENING STOCK');
				INSERT INTO FSINVTYPLKP VALUES ('PURCHASE','C', 'STOCK PURCHASE ADDITION' );
				INSERT INTO FSINVTYPLKP VALUES ('SALE','C', ' STOCK DEDUCTION BY SALE');
				INSERT INTO FSINVTYPLKP VALUES ('CONSUMPTION','C', ' STOCK DEDUCTION CONSUMED');


				FS INVENTORY DATA CAPTURE

				Input: FYID Validate against fybegin
						   INVENTORY drop down of FSINVLKP compulsory
						   TXNDATE a valid date of the FYID selected
						   TXNTYPE  Drop down selection of FSINVTYPLKP
						   TXNQNTY Number with decimal precision of  3
						   TXNVALUE Number with decimal precision of 2


					


							
														

			





BS -main structure ;

A-Assets
	A1- Non current assets
		A11	Property,Plant & Equipments schedule 1
			Has a variable list with sales, purchase & depreciation
			Each itmes opening, credits ,debits can be printed against each item
			All items existed in opening of new need to be included
			Depreciation to be a single input value as FADEP 

		A12  Capital work in progress  (schedule printed along with A11 ? cant be separate)   schedule 1
			Format Same as A11
		
		A13  Preliminary Expenese	Sch2 (where to take the values )
		balance at the begining of the year	 is it a balancesheet items ?
		amounts written on during the year
	



